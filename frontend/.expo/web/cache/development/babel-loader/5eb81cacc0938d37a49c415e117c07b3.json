{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mbmih\\\\OneDrive\\\\Desktop\\\\Work\\\\App Final\\\\Tip-Top-NX\\\\frontend\\\\Frontend\\\\src\\\\ProductDescription\\\\Colour.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar Colours = function Colours(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var colors = _toConsumableArray(props.colors);\n\n  useEffect(function () {\n    props.onColorChange(colors[selected]);\n  }, [selected]);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.headerStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.headerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"COLOURS\"))), React.createElement(View, {\n    style: {\n      flexDirection: \"row\",\n      justifyContent: \"space-evenly\",\n      width: \"90%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: colors,\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        style: [styles.colorBox, {\n          borderColor: colors.indexOf(item) === selected ? \"#C2185B\" : \"#000\",\n          borderWidth: colors.indexOf(item) === selected ? 3 : 1\n        }],\n        onPress: function onPress() {\n          return setSelected(colors.indexOf(item));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.colorTextStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }, item));\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Colours;\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 10,\n    borderWidth: 1,\n    backgroundColor: \"#fff\",\n    borderColor: \"#ccc\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingBottom: 10\n  },\n  colorBox: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 8,\n    width: 80,\n    height: 80,\n    marginHorizontal: 5\n  },\n  colorTextStyle: {\n    fontWeight: \"500\",\n    fontSize: 15\n  },\n  headerStyle: {\n    height: 50,\n    borderBottomWidth: 1,\n    borderColor: \"#ccc\",\n    width: \"100%\",\n    paddingLeft: 15,\n    marginBottom: 10,\n    justifyContent: \"center\"\n  },\n  headerText: {\n    color: \"grey\",\n    fontWeight: \"bold\",\n    fontSize: 12\n  }\n});","map":{"version":3,"sources":["C:/Users/mbmih/OneDrive/Desktop/Work/App Final/Tip-Top-NX/frontend/Frontend/src/ProductDescription/Colour.js"],"names":["React","useState","useEffect","Colours","props","selected","setSelected","colors","onColorChange","styles","container","headerStyle","headerText","flexDirection","justifyContent","width","item","colorBox","borderColor","indexOf","borderWidth","colorTextStyle","index","toString","StyleSheet","create","marginTop","backgroundColor","alignItems","paddingBottom","borderRadius","height","marginHorizontal","fontWeight","fontSize","borderBottomWidth","paddingLeft","marginBottom","color"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Text,\r\n  FlatList,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nconst Colours = (props) => {\r\n  const [selected, setSelected] = useState();\r\n  const colors = [...props.colors];\r\n\r\n  useEffect(() => {\r\n    props.onColorChange(colors[selected]);\r\n  }, [selected]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.headerStyle}>\r\n        <View>\r\n          <Text style={styles.headerText}>COLOURS</Text>\r\n        </View>\r\n      </View>\r\n      <View\r\n        style={{\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-evenly\",\r\n          width: \"90%\",\r\n        }}\r\n      >\r\n        <FlatList\r\n          data={colors}\r\n          horizontal={true}\r\n          showsHorizontalScrollIndicator={false}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.colorBox,\r\n                {\r\n                  borderColor:\r\n                    colors.indexOf(item) === selected ? \"#C2185B\" : \"#000\",\r\n                  borderWidth: colors.indexOf(item) === selected ? 3 : 1,\r\n                },\r\n              ]}\r\n              onPress={() => setSelected(colors.indexOf(item))}\r\n            >\r\n              <Text style={styles.colorTextStyle}>{item}</Text>\r\n            </TouchableOpacity>\r\n          )}\r\n          keyExtractor={(item, index) => index.toString()}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Colours;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginTop: 10,\r\n    borderWidth: 1,\r\n    backgroundColor: \"#fff\",\r\n    borderColor: \"#ccc\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 10,\r\n  },\r\n  colorBox: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 8,\r\n    width: 80,\r\n    height: 80,\r\n    marginHorizontal: 5,\r\n  },\r\n  colorTextStyle: {\r\n    fontWeight: \"500\",\r\n    fontSize: 15,\r\n  },\r\n  headerStyle: {\r\n    height: 50,\r\n    borderBottomWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    width: \"100%\",\r\n    paddingLeft: 15,\r\n    marginBottom: 10,\r\n    justifyContent: \"center\",\r\n  },\r\n  headerText: {\r\n    color: \"grey\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 12,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}