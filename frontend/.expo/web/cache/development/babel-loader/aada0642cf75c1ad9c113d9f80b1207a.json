{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\mbmih\\\\OneDrive\\\\Desktop\\\\Work\\\\App Final\\\\Tip-Top-NX\\\\frontend\\\\Frontend\\\\src\\\\Home\\\\BackgroundCarousel.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nvar DEVICE_WIDTH = Dimensions.get(\"window\").width;\nvar AUTO_SWIPE_INTERVAL = 3000;\nvar height = DEVICE_WIDTH * 0.6;\n\nvar BackgroundCarousel = function (_React$Component) {\n  _inherits(BackgroundCarousel, _React$Component);\n\n  var _super = _createSuper(BackgroundCarousel);\n\n  function BackgroundCarousel(props) {\n    var _this;\n\n    _classCallCheck(this, BackgroundCarousel);\n\n    _this = _super.call(this, props);\n    _this._isMounted = false;\n    _this.scrollRef = React.createRef();\n\n    _this.componentDidMount = function () {\n      _this._isMounted = true;\n      setInterval(function () {\n        if (_this._isMounted) {\n          _this.setState(function (prev) {\n            return {\n              selectedIndex: prev.selectedIndex === _this.props.images.length - 1 ? 0 : prev.selectedIndex + 1\n            };\n          }, function () {\n            _this.scrollRef.current.scrollTo({\n              animated: true,\n              x: DEVICE_WIDTH * _this.state.selectedIndex,\n              y: 0\n            });\n          });\n        }\n      }, AUTO_SWIPE_INTERVAL);\n    };\n\n    _this.nextImage = function () {\n      return _this.setState(function (prev) {\n        return {\n          selectedIndex: prev.selectedIndex === _this.props.images.length - 1 ? 0 : prev.selectedIndex + 1\n        };\n      });\n    };\n\n    _this.setSelectedIndex = function (event) {\n      var contentOffset = event.nativeEvent.contentOffset;\n      var viewSize = event.nativeEvent.layoutMeasurement;\n      var selectedIndex = Math.floor(contentOffset.x / viewSize.width);\n\n      _this.setState({\n        selectedIndex: selectedIndex\n      });\n    };\n\n    _this.state = {\n      selectedIndex: 0\n    };\n    _this.scrollRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(BackgroundCarousel, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var images = this.props.images;\n      var selectedIndex = this.state.selectedIndex;\n      return React.createElement(View, {\n        style: {\n          height: height,\n          width: \"100%\",\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        horizontal: true,\n        pagingEnabled: true,\n        onMomentumScrollEnd: this.setSelectedIndex,\n        ref: this.scrollRef,\n        showsHorizontalScrollIndicator: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }, images.map(function (image) {\n        return React.createElement(Image, {\n          style: styles.backgroundImage,\n          source: {\n            uri: image\n          },\n          key: image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }\n        });\n      })), React.createElement(View, {\n        style: styles.circleDiv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, images.map(function (image, i) {\n        return React.createElement(View, {\n          style: [styles.whiteCircle, {\n            opacity: i === selectedIndex ? 1 : 0.5\n          }],\n          key: image,\n          active: i === selectedIndex,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }\n        });\n      })));\n    }\n  }]);\n\n  return BackgroundCarousel;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  backgroundImage: {\n    height: \"100%\",\n    width: Dimensions.get(\"window\").width\n  },\n  circleDiv: {\n    position: \"absolute\",\n    bottom: 15,\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    height: 10\n  },\n  whiteCircle: {\n    width: 6,\n    height: 6,\n    borderRadius: 3,\n    margin: 5,\n    backgroundColor: \"#fff\"\n  }\n});\nexport { BackgroundCarousel };","map":{"version":3,"sources":["C:/Users/mbmih/OneDrive/Desktop/Work/App Final/Tip-Top-NX/frontend/Frontend/src/Home/BackgroundCarousel.js"],"names":["React","DEVICE_WIDTH","Dimensions","get","width","AUTO_SWIPE_INTERVAL","height","BackgroundCarousel","props","_isMounted","scrollRef","createRef","componentDidMount","setInterval","setState","prev","selectedIndex","images","length","current","scrollTo","animated","x","state","y","nextImage","setSelectedIndex","event","contentOffset","nativeEvent","viewSize","layoutMeasurement","Math","floor","marginTop","map","image","styles","backgroundImage","uri","circleDiv","i","whiteCircle","opacity","Component","StyleSheet","create","position","bottom","display","flexDirection","alignItems","justifyContent","borderRadius","margin","backgroundColor"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\nimport * as React from \"react\";\r\nimport { StyleSheet, View, ScrollView, Dimensions, Image } from \"react-native\";\r\n\r\nconst DEVICE_WIDTH = Dimensions.get(\"window\").width;\r\nconst AUTO_SWIPE_INTERVAL = 3000;\r\n\r\nconst height = DEVICE_WIDTH * 0.6; //60%\r\n\r\nclass BackgroundCarousel extends React.Component {\r\n  _isMounted=false;\r\n\r\n  scrollRef = React.createRef();\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedIndex: 0\r\n    }\r\n    this.scrollRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this._isMounted=true;\r\n\r\n      setInterval(() => {\r\n        if(this._isMounted){\r\n          this.setState(\r\n            (prev) => ({\r\n              selectedIndex:\r\n                prev.selectedIndex === this.props.images.length - 1\r\n                  ? 0\r\n                  : prev.selectedIndex + 1,\r\n            }),\r\n            () => {\r\n              this.scrollRef.current.scrollTo({\r\n                animated: true,\r\n                x: DEVICE_WIDTH * this.state.selectedIndex,\r\n                y: 0,\r\n              });\r\n            }\r\n          );\r\n        }\r\n      }, AUTO_SWIPE_INTERVAL);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n  \r\n  nextImage = () =>\r\n    this.setState((prev) => ({\r\n      selectedIndex:\r\n        prev.selectedIndex === this.props.images.length - 1\r\n          ? 0\r\n          : prev.selectedIndex + 1,\r\n    }));\r\n\r\n  setSelectedIndex = (event) => {\r\n    const contentOffset = event.nativeEvent.contentOffset;\r\n    const viewSize = event.nativeEvent.layoutMeasurement;\r\n\r\n    // Divide the horizontal offset by the width of the view to see which page is visible\r\n    const selectedIndex = Math.floor(contentOffset.x / viewSize.width);\r\n    this.setState({ selectedIndex });\r\n  };\r\n\r\n  render() {\r\n    const { images } = this.props;\r\n    const { selectedIndex } = this.state;\r\n    return (\r\n      <View style={{ height: height, width: \"100%\", marginTop: 10 }}>\r\n        <ScrollView\r\n          horizontal\r\n          pagingEnabled\r\n          onMomentumScrollEnd={this.setSelectedIndex}\r\n          ref={this.scrollRef}\r\n          showsHorizontalScrollIndicator={false}\r\n        >\r\n          {images.map((image) => (\r\n            <Image\r\n              style={styles.backgroundImage}\r\n              source={{ uri: image }}\r\n              key={image}\r\n            />\r\n          ))}\r\n        </ScrollView>\r\n        <View style={styles.circleDiv}>\r\n          {images.map((image, i) => (\r\n            <View\r\n              style={[\r\n                styles.whiteCircle,\r\n                { opacity: i === selectedIndex ? 1 : 0.5 },\r\n              ]}\r\n              key={image}\r\n              active={i === selectedIndex}\r\n            />\r\n          ))}\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  backgroundImage: {\r\n    height: \"100%\",\r\n    width: Dimensions.get(\"window\").width,\r\n  },\r\n  circleDiv: {\r\n    position: \"absolute\",\r\n    bottom: 15,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    height: 10,\r\n  },\r\n  whiteCircle: {\r\n    width: 6,\r\n    height: 6,\r\n    borderRadius: 3,\r\n    margin: 5,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n});\r\n\r\nexport { BackgroundCarousel };\r\n"]},"metadata":{},"sourceType":"module"}