{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mbmih\\\\OneDrive\\\\Desktop\\\\Work\\\\App Final\\\\Tip-Top-NX\\\\frontend\\\\Frontend\\\\src\\\\SignUp\\\\SignUp.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport styles from \"./SignUpStyles\";\nimport PropTypes from \"prop-types\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { signup, signinFailed } from \"../../../redux/ActionCreators\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nvar signUp = function signUp() {\n  var navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      phone = _useState8[0],\n      setPhone = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      validName = _useState10[0],\n      checkName = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      validEmail = _useState12[0],\n      checkEmail = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      validPassword = _useState14[0],\n      checkPassword = _useState14[1];\n\n  var _useState15 = useState(true),\n      _useState16 = _slicedToArray(_useState15, 2),\n      validPhone = _useState16[0],\n      checkPhone = _useState16[1];\n\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(signinFailed());\n  }, []);\n  useEffect(function () {\n    if (user.isValid) {\n      navigation.navigate(\"Home\");\n    }\n  }, [user.isValid]);\n\n  var validation = function validation() {\n    var emailregex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n    var alph = /^[a-zA-Z]{2,40}( [a-zA-Z]{2,40})+$/;\n\n    if (name == \"\") {\n      checkName(false);\n    } else if (!alph.test(name)) {\n      checkName(false);\n    } else {\n      checkName(true);\n    }\n\n    if (email == \"\") {\n      checkEmail(false);\n    } else if (!emailregex.test(email)) {\n      checkEmail(false);\n    } else {\n      checkEmail(true);\n    }\n\n    if (password == \"\" || password.length < 6) {\n      checkPassword(false);\n      setPassword(\"\");\n    } else {\n      checkPassword(true);\n    }\n\n    if (phone == \"\" || phone.length !== 10 || phone.charAt(0) < 7) {\n      checkPhone(false);\n    } else {\n      checkPhone(true);\n    }\n\n    if (validEmail && validName && validPassword && validPhone) {\n      dispatch(signup({\n        name: name,\n        email: email,\n        password: password,\n        contact: phone\n      }));\n    }\n  };\n\n  return React.createElement(KeyboardAwareScrollView, {\n    scrollEnabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"../../../assets/b1.jpg\"),\n    style: {\n      flex: 1,\n      resizeMode: \"cover\",\n      justifyContent: \"center\",\n      width: \"100%\"\n    },\n    blurRadius: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, \"SIGN UP\"), React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \"TO CONTINUE\")), React.createElement(View, {\n    style: [styles.inputContainer, !validName ? styles.error : null],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"FULL NAME\",\n    placeholderTextColor: \"#666\",\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    value: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: [styles.inputContainer, !validEmail ? styles.error : null],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"EMAIL ADDRESS\",\n    placeholderTextColor: \"#666\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: [styles.inputContainer, !validPassword ? styles.error : null],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"PASSWORD\",\n    placeholderTextColor: \"#666\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: [styles.inputContainer, !validPhone ? styles.error : null],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"PHONE NUMBER\",\n    placeholderTextColor: \"#666\",\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(text) {\n      return setPhone(text);\n    },\n    value: phone,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return validation();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, \"JOIN US\")), React.createElement(View, {\n    style: styles.signInBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.signInText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 15\n    }\n  }, \"ALREADY A MEMBER ?\"), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.reset({\n        index: 0,\n        routes: [{\n          name: \"Sign In\"\n        }]\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, \"SIGN IN\")))))));\n};\n\nexport default signUp;","map":{"version":3,"sources":["C:/Users/mbmih/OneDrive/Desktop/Work/App Final/Tip-Top-NX/frontend/Frontend/src/SignUp/SignUp.js"],"names":["React","useState","useEffect","styles","PropTypes","KeyboardAwareScrollView","useSelector","useDispatch","signup","signinFailed","useNavigation","signUp","navigation","name","setName","email","setEmail","password","setPassword","phone","setPhone","validName","checkName","validEmail","checkEmail","validPassword","checkPassword","validPhone","checkPhone","user","state","dispatch","isValid","navigate","validation","emailregex","alph","test","length","charAt","contact","Keyboard","dismiss","container","require","flex","resizeMode","justifyContent","width","title","textStyle","inputContainer","error","inputText","text","button","buttonText","signInBox","signInText","reset","index","routes"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;;;AAWA,OAAOC,MAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,uBAAT,QAAwC,yCAAxC;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,YAAjB;AAEA,SAASC,aAAT,QAA8B,0BAA9B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,MAAMC,UAAU,GAAGF,aAAa,EAAhC;;AADmB,kBAGKT,QAAQ,CAAC,EAAD,CAHb;AAAA;AAAA,MAGZY,IAHY;AAAA,MAGNC,OAHM;;AAAA,mBAIOb,QAAQ,CAAC,EAAD,CAJf;AAAA;AAAA,MAIZc,KAJY;AAAA,MAILC,QAJK;;AAAA,mBAKaf,QAAQ,CAAC,EAAD,CALrB;AAAA;AAAA,MAKZgB,QALY;AAAA,MAKFC,WALE;;AAAA,mBAMOjB,QAAQ,CAAC,EAAD,CANf;AAAA;AAAA,MAMZkB,KANY;AAAA,MAMLC,QANK;;AAAA,mBAQYnB,QAAQ,CAAC,IAAD,CARpB;AAAA;AAAA,MAQZoB,SARY;AAAA,MAQDC,SARC;;AAAA,oBAScrB,QAAQ,CAAC,IAAD,CATtB;AAAA;AAAA,MASZsB,UATY;AAAA,MASAC,UATA;;AAAA,oBAUoBvB,QAAQ,CAAC,IAAD,CAV5B;AAAA;AAAA,MAUZwB,aAVY;AAAA,MAUGC,aAVH;;AAAA,oBAWczB,QAAQ,CAAC,IAAD,CAXtB;AAAA;AAAA,MAWZ0B,UAXY;AAAA,MAWAC,UAXA;;AAcnB,MAAMC,IAAI,GAAGvB,WAAW,CAAC,UAACwB,KAAD;AAAA,WAAWA,KAAK,CAACD,IAAjB;AAAA,GAAD,CAAxB;AACA,MAAME,QAAQ,GAAGxB,WAAW,EAA5B;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACd6B,IAAAA,QAAQ,CAACtB,YAAY,EAAb,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI2B,IAAI,CAACG,OAAT,EAAkB;AAChBpB,MAAAA,UAAU,CAACqB,QAAX,CAAoB,MAApB;AACD;AACF,GAJQ,EAIN,CAACJ,IAAI,CAACG,OAAN,CAJM,CAAT;;AAMA,MAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAMC,UAAU,GAAG,2CAAnB;AACA,QAAMC,IAAI,GAAG,oCAAb;;AAGA,QAAIvB,IAAI,IAAI,EAAZ,EAAgB;AACdS,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD,KAFD,MAEO,IAAI,CAACc,IAAI,CAACC,IAAL,CAAUxB,IAAV,CAAL,EAAsB;AAC3BS,MAAAA,SAAS,CAAC,KAAD,CAAT;AAED,KAHM,MAGA;AACLA,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,QAAIP,KAAK,IAAI,EAAb,EAAiB;AACfS,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFD,MAEO,IAAI,CAACW,UAAU,CAACE,IAAX,CAAgBtB,KAAhB,CAAL,EAA6B;AAClCS,MAAAA,UAAU,CAAC,KAAD,CAAV;AAED,KAHM,MAGA;AACLA,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AAED,QAAIP,QAAQ,IAAI,EAAZ,IAAkBA,QAAQ,CAACqB,MAAT,GAAkB,CAAxC,EAA2C;AACzCZ,MAAAA,aAAa,CAAC,KAAD,CAAb;AAEAR,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KAJD,MAIO;AACLQ,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AAED,QAAIP,KAAK,IAAI,EAAT,IAAeA,KAAK,CAACmB,MAAN,KAAiB,EAAhC,IAAsCnB,KAAK,CAACoB,MAAN,CAAa,CAAb,IAAkB,CAA5D,EAA+D;AAC7DX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFD,MAEO;AACLA,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AAED,QAAIL,UAAU,IAAIF,SAAd,IAA2BI,aAA3B,IAA4CE,UAAhD,EAA4D;AAC1DI,MAAAA,QAAQ,CACNvB,MAAM,CAAC;AACLK,QAAAA,IAAI,EAAJA,IADK;AAELE,QAAAA,KAAK,EAALA,KAFK;AAGLE,QAAAA,QAAQ,EAARA,QAHK;AAILuB,QAAAA,OAAO,EAAErB;AAJJ,OAAD,CADA,CAAR;AAQD;AACF,GA/CD;;AAiDA,SACE,oBAAC,uBAAD;AAAyB,IAAA,aAAa,EAAE,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAE;AAAA,aAAMsB,QAAQ,CAACC,OAAT,EAAN;AAAA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvC,MAAM,CAACwC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AACE,IAAA,MAAM,EAAEC,OAAO,0BADjB;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,CADD;AAELC,MAAAA,UAAU,EAAE,OAFP;AAGLC,MAAAA,cAAc,EAAE,QAHX;AAILC,MAAAA,KAAK,EAAE;AAJF,KAFT;AAQE,IAAA,UAAU,EAAE,CARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE7C,MAAM,CAAC8C,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9C,MAAM,CAAC+C,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/C,MAAM,CAAC+C,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CAVF,EAcE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CAAC/C,MAAM,CAACgD,cAAR,EAAwB,CAAC9B,SAAD,GAAalB,MAAM,CAACiD,KAApB,GAA4B,IAApD,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEjD,MAAM,CAACkD,SADhB;AAEE,IAAA,WAAW,EAAC,WAFd;AAGE,IAAA,oBAAoB,EAAC,MAHvB;AAIE,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUxC,OAAO,CAACwC,IAAD,CAAjB;AAAA,KAJhB;AAKE,IAAA,KAAK,EAAEzC,IALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAdF,EAyBE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CAACV,MAAM,CAACgD,cAAR,EAAwB,CAAC5B,UAAD,GAAcpB,MAAM,CAACiD,KAArB,GAA6B,IAArD,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEjD,MAAM,CAACkD,SADhB;AAEE,IAAA,WAAW,EAAC,eAFd;AAGE,IAAA,oBAAoB,EAAC,MAHvB;AAIE,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUtC,QAAQ,CAACsC,IAAD,CAAlB;AAAA,KAJhB;AAKE,IAAA,KAAK,EAAEvC,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAzBF,EAoCE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLZ,MAAM,CAACgD,cADF,EAEL,CAAC1B,aAAD,GAAiBtB,MAAM,CAACiD,KAAxB,GAAgC,IAF3B,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEjD,MAAM,CAACkD,SADhB;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,oBAAoB,EAAC,MAHvB;AAIE,IAAA,eAAe,EAAE,IAJnB;AAKE,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUpC,WAAW,CAACoC,IAAD,CAArB;AAAA,KALhB;AAME,IAAA,KAAK,EAAErC,QANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CApCF,EAmDE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CAACd,MAAM,CAACgD,cAAR,EAAwB,CAACxB,UAAD,GAAcxB,MAAM,CAACiD,KAArB,GAA6B,IAArD,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEjD,MAAM,CAACkD,SADhB;AAEE,IAAA,WAAW,EAAC,cAFd;AAGE,IAAA,oBAAoB,EAAC,MAHvB;AAIE,IAAA,YAAY,EAAE,SAJhB;AAKE,IAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,aAAUlC,QAAQ,CAACkC,IAAD,CAAlB;AAAA,KALhB;AAME,IAAA,KAAK,EAAEnC,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAnDF,EA+DE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEhB,MAAM,CAACoD,MADhB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMrB,UAAU,EAAhB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE/B,MAAM,CAACqD,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CA/DF,EAqEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAErD,MAAM,CAACsD,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEtD,MAAM,CAACuD,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEvD,MAAM,CAACoD,MADhB;AAEE,IAAA,OAAO,EAAE;AAAA,aACP3C,UAAU,CAAC+C,KAAX,CAAiB;AACfC,QAAAA,KAAK,EAAE,CADQ;AAEfC,QAAAA,MAAM,EAAE,CAAC;AAAEhD,UAAAA,IAAI,EAAE;AAAR,SAAD;AAFO,OAAjB,CADO;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACqD,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATF,CAFF,CArEF,CADF,CADF,CADF,CADF;AA4FD,CAxKD;;AA0KA,eAAe7C,MAAf","sourcesContent":["/* eslint-disable */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport styles from \"./SignUpStyles\";\r\nimport PropTypes from \"prop-types\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { signup, signinFailed } from \"../../../redux/ActionCreators\";\r\n\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\nconst signUp = () => {\r\n  const navigation = useNavigation();\r\n  // states for handling the input\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  // states for style change if not valid\r\n  const [validName, checkName] = useState(true);\r\n  const [validEmail, checkEmail] = useState(true);\r\n  const [validPassword, checkPassword] = useState(true);\r\n  const [validPhone, checkPhone] = useState(true);\r\n\r\n  // redux\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(signinFailed());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user.isValid) {\r\n      navigation.navigate(\"Home\");\r\n    }\r\n  }, [user.isValid]);\r\n\r\n  const validation = () => {\r\n    const emailregex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n    const alph = /^[a-zA-Z]{2,40}( [a-zA-Z]{2,40})+$/;\r\n\r\n    // name check\r\n    if (name == \"\") {\r\n      checkName(false);\r\n    } else if (!alph.test(name)) {\r\n      checkName(false);\r\n      // alert(\"Please enter a valid name\");\r\n    } else {\r\n      checkName(true);\r\n    }\r\n    // email check\r\n    if (email == \"\") {\r\n      checkEmail(false);\r\n    } else if (!emailregex.test(email)) {\r\n      checkEmail(false);\r\n      // alert(\"Please enter a valid email address\");\r\n    } else {\r\n      checkEmail(true);\r\n    }\r\n    // password check\r\n    if (password == \"\" || password.length < 6) {\r\n      checkPassword(false);\r\n      // alert(\"The length of the password should be atleast 6\");\r\n      setPassword(\"\");\r\n    } else {\r\n      checkPassword(true);\r\n    }\r\n    // phone number check\r\n    if (phone == \"\" || phone.length !== 10 || phone.charAt(0) < 7) {\r\n      checkPhone(false);\r\n    } else {\r\n      checkPhone(true);\r\n    }\r\n\r\n    if (validEmail && validName && validPassword && validPhone) {\r\n      dispatch(\r\n        signup({\r\n          name,\r\n          email,\r\n          password,\r\n          contact: phone,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <KeyboardAwareScrollView scrollEnabled={true}>\r\n      <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\r\n        <View style={styles.container}>\r\n          <ImageBackground\r\n            source={require(\"../../../assets/b1.jpg\")}\r\n            style={{\r\n              flex: 1,\r\n              resizeMode: \"cover\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n            blurRadius={0}\r\n          >\r\n            <View style={styles.title}>\r\n              <Text style={styles.textStyle}>SIGN UP</Text>\r\n              <Text style={styles.textStyle}>TO CONTINUE</Text>\r\n            </View>\r\n            <View\r\n              style={[styles.inputContainer, !validName ? styles.error : null]}\r\n            >\r\n              <TextInput\r\n                style={styles.inputText}\r\n                placeholder=\"FULL NAME\"\r\n                placeholderTextColor=\"#666\"\r\n                onChangeText={(text) => setName(text)}\r\n                value={name}\r\n              ></TextInput>\r\n            </View>\r\n            <View\r\n              style={[styles.inputContainer, !validEmail ? styles.error : null]}\r\n            >\r\n              <TextInput\r\n                style={styles.inputText}\r\n                placeholder=\"EMAIL ADDRESS\"\r\n                placeholderTextColor=\"#666\"\r\n                onChangeText={(text) => setEmail(text)}\r\n                value={email}\r\n              ></TextInput>\r\n            </View>\r\n            <View\r\n              style={[\r\n                styles.inputContainer,\r\n                !validPassword ? styles.error : null,\r\n              ]}\r\n            >\r\n              <TextInput\r\n                style={styles.inputText}\r\n                placeholder=\"PASSWORD\"\r\n                placeholderTextColor=\"#666\"\r\n                secureTextEntry={true}\r\n                onChangeText={(text) => setPassword(text)}\r\n                value={password}\r\n              ></TextInput>\r\n            </View>\r\n            <View\r\n              style={[styles.inputContainer, !validPhone ? styles.error : null]}\r\n            >\r\n              <TextInput\r\n                style={styles.inputText}\r\n                placeholder=\"PHONE NUMBER\"\r\n                placeholderTextColor=\"#666\"\r\n                keyboardType={\"numeric\"}\r\n                onChangeText={(text) => setPhone(text)}\r\n                value={phone}\r\n              ></TextInput>\r\n            </View>\r\n            <TouchableOpacity\r\n              style={styles.button}\r\n              onPress={() => validation()}\r\n            >\r\n              <Text style={styles.buttonText}>JOIN US</Text>\r\n            </TouchableOpacity>\r\n            <View style={styles.signInBox}>\r\n              <Text style={styles.signInText}>ALREADY A MEMBER ?</Text>\r\n              <TouchableOpacity\r\n                style={styles.button}\r\n                onPress={() =>\r\n                  navigation.reset({\r\n                    index: 0,\r\n                    routes: [{ name: \"Sign In\" }],\r\n                  })\r\n                }\r\n              >\r\n                <Text style={styles.buttonText}>SIGN IN</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </ImageBackground>\r\n        </View>\r\n      </TouchableWithoutFeedback>\r\n    </KeyboardAwareScrollView>\r\n  );\r\n};\r\n\r\nexport default signUp;\r\n"]},"metadata":{},"sourceType":"module"}