{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mbmih\\\\OneDrive\\\\Desktop\\\\Work\\\\App Final\\\\Tip-Top-NX\\\\frontend\\\\Frontend\\\\src\\\\Profile\\\\ProfilePage\\\\Picture.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport UserPermissions from \"../../../Utilities/UserPermissions\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { postImage } from \"../../../../redux/ActionCreators\";\nimport { getURL } from \"../../../../axios\";\n\nvar Picture = function Picture() {\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      picture = _useState2[0],\n      setPicture = _useState2[1];\n\n  useEffect(function () {\n    if (user.image != \"\") {\n      setPicture(getURL(user.image));\n    }\n  }, [user.image]);\n\n  var handlePress = function handlePress() {\n    var result, data;\n    return _regeneratorRuntime.async(function handlePress$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            UserPermissions.getCameraPermission();\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [4, 3]\n            }));\n\n          case 3:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              setPicture(result.uri);\n              data = new FormData();\n              data.append(\"myImage\", {\n                uri: result.uri,\n                type: \"image/jpeg\",\n                name: \"profile.jpg\"\n              });\n              dispatch(postImage(data));\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"chevron-left-circle\",\n    size: 30,\n    color: \"#F8A9A9\",\n    style: {\n      position: \"absolute\",\n      top: 30,\n      left: 20\n    },\n    onPress: function onPress() {\n      navigation.openDrawer();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.avatarPlaceholder,\n    onPress: function onPress() {\n      return handlePress();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, picture === \"\" ? React.createElement(Image, {\n    source: require(\"../../../../assets/k.gif\"),\n    style: {\n      height: 100,\n      width: 100,\n      borderRadius: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }) : React.createElement(Image, {\n    source: {\n      uri: picture\n    },\n    style: styles.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }))), React.createElement(View, {\n    style: styles.textContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, user.name.toUpperCase())));\n};\n\nvar styles = StyleSheet.create({\n  avatar: {\n    position: \"absolute\",\n    width: 150,\n    height: 150,\n    borderRadius: 75,\n    backgroundColor: \"#E1E2E6\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  avatarPlaceholder: {\n    marginVertical: 10,\n    marginTop: 30,\n    width: 160,\n    height: 160,\n    backgroundColor: \"#E1E2E6\",\n    borderRadius: 80,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    borderWidth: 1,\n    borderColor: \"#DDA0DD\",\n    borderStyle: \"dotted\"\n  },\n  container: {},\n  textStyle: {\n    textAlign: \"center\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  },\n  textContainer: {\n    height: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(52, 52, 52, 0.7)\"\n  },\n  header: {}\n});\nexport default Picture;","map":{"version":3,"sources":["C:/Users/mbmih/OneDrive/Desktop/Work/App Final/Tip-Top-NX/frontend/Frontend/src/Profile/ProfilePage/Picture.js"],"names":["React","useState","useEffect","useDispatch","useSelector","UserPermissions","ImagePicker","MaterialCommunityIcons","useNavigation","postImage","getURL","Picture","user","state","dispatch","navigation","picture","setPicture","image","handlePress","getCameraPermission","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","result","cancelled","uri","data","FormData","append","type","name","styles","container","header","position","top","left","openDrawer","avatarPlaceholder","require","height","width","borderRadius","avatar","textContainer","textStyle","toUpperCase","StyleSheet","create","backgroundColor","justifyContent","alignItems","marginVertical","marginTop","alignSelf","borderWidth","borderColor","borderStyle","textAlign","fontSize","fontWeight","color"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { StyleSheet, TouchableOpacity, Image, View, Text } from \"react-native\";\r\nimport UserPermissions from \"../../../Utilities/UserPermissions\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { postImage } from \"../../../../redux/ActionCreators\";\r\nimport { getURL } from \"../../../../axios\";\r\n\r\nconst Picture = () => {\r\n  // redux\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const navigation = useNavigation();\r\n  const [picture, setPicture] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (user.image != \"\") {\r\n      // console.log(getURL(user.image));\r\n      setPicture(getURL(user.image));\r\n    }\r\n  }, [user.image]);\r\n\r\n  const handlePress = async () => {\r\n    UserPermissions.getCameraPermission();\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n    });\r\n    if (!result.cancelled) {\r\n      // console.log(result.uri);\r\n      setPicture(result.uri);\r\n      const data = new FormData();\r\n      data.append(\"myImage\", {\r\n        uri: result.uri,\r\n        type: \"image/jpeg\",\r\n        name: \"profile.jpg\",\r\n      });\r\n      dispatch(postImage(data));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <MaterialCommunityIcons\r\n          name=\"chevron-left-circle\"\r\n          size={30}\r\n          color=\"#F8A9A9\"\r\n          style={{ position: \"absolute\", top: 30, left: 20 }}\r\n          onPress={() => {\r\n            navigation.openDrawer();\r\n          }}\r\n        />\r\n        <TouchableOpacity\r\n          style={styles.avatarPlaceholder}\r\n          onPress={() => handlePress()}\r\n        >\r\n          {picture === \"\" ? (\r\n            <Image\r\n              source={require(\"../../../../assets/k.gif\")}\r\n              style={{ height: 100, width: 100, borderRadius: 50 }}\r\n            ></Image>\r\n          ) : (\r\n            <Image source={{ uri: picture }} style={styles.avatar} />\r\n          )}\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={styles.textContainer}>\r\n        <Text style={styles.textStyle}>{user.name.toUpperCase()}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  avatar: {\r\n    position: \"absolute\",\r\n    width: 150,\r\n    height: 150,\r\n    borderRadius: 75,\r\n    backgroundColor: \"#E1E2E6\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatarPlaceholder: {\r\n    marginVertical: 10,\r\n    marginTop: 30,\r\n    width: 160,\r\n    height: 160,\r\n    backgroundColor: \"#E1E2E6\",\r\n    borderRadius: 80,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    alignSelf: \"center\",\r\n    borderWidth: 1,\r\n    borderColor: \"#DDA0DD\",\r\n    borderStyle: \"dotted\",\r\n  },\r\n  container: {\r\n    // borderWidth: 1,\r\n  },\r\n  textStyle: {\r\n    textAlign: \"center\",\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    color: \"#fff\",\r\n  },\r\n  textContainer: {\r\n    height: 50,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"rgba(52, 52, 52, 0.7)\",\r\n  },\r\n  header: {},\r\n});\r\n\r\nexport default Picture;\r\n"]},"metadata":{},"sourceType":"module"}