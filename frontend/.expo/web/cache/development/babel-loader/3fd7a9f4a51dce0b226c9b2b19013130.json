{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mbmih\\\\OneDrive\\\\Desktop\\\\Work\\\\App Final\\\\Tip-Top-NX\\\\frontend\\\\Frontend\\\\src\\\\SignIn\\\\SignIn.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"./SignInStyles\";\nimport PropTypes from \"prop-types\";\nimport Splash from \"../Splash\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { signin, signinFailed } from \"../../../redux/ActionCreators\";\n\nvar signIn = function signIn(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      validEmail = _useState6[0],\n      checkEmail = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      validPassword = _useState8[0],\n      checkPassword = _useState8[1];\n\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    user.isValid = false;\n    dispatch(signinFailed());\n  }, []);\n  useEffect(function () {\n    if (user.isValid) {\n      navigation.navigate(\"Home\");\n    }\n  }, [user.isValid]);\n\n  var validation = function validation() {\n    var emailregex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n    var valid = true;\n\n    if (email == \"\") {\n      checkEmail(false);\n      valid = false;\n    } else if (!emailregex.test(email)) {\n      checkEmail(false);\n      valid = false;\n    } else {\n      checkEmail(true);\n    }\n\n    if (password == \"\" || password.length < 6) {\n      checkPassword(false);\n      valid = false;\n      setPassword(\"\");\n    } else {\n      checkPassword(true);\n    }\n\n    if (valid) {\n      dispatch(signin({\n        email: email,\n        password: password\n      }));\n    }\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, user.isFetching ? React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: \"100%\",\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../../assets/q.gif\"),\n    style: {\n      height: 100,\n      width: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  })) : React.createElement(ImageBackground, {\n    source: require(\"../../../assets/b1.jpg\"),\n    style: {\n      flex: 1,\n      resizeMode: \"cover\",\n      justifyContent: \"center\",\n      width: \"100%\"\n    },\n    blurRadius: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.button, {\n      width: 100,\n      backgroundColor: \"rgba(0, 0, 0, 0.75)\",\n      alignSelf: \"flex-end\"\n    }],\n    onPress: function onPress() {\n      return navigation.navigate(\"Home\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"SKIP\")), React.createElement(View, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, \"SIGN IN\"), React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"TO CONTINUE\")), React.createElement(View, {\n    style: [styles.inputContainer, !validEmail ? styles.error : null],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"EMAIL ADDRESS\",\n    placeholderTextColor: \"#666\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: [styles.inputContainer, !validPassword ? styles.error : null],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"PASSWORD\",\n    placeholderTextColor: \"#666\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return validation();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  }, \"BEGIN\")), React.createElement(View, {\n    style: styles.signUpBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.signUpText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, \"NOT A MEMBER YET ?\"), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.reset({\n        index: 0,\n        routes: [{\n          name: \"Sign Up\"\n        }]\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \"SIGN UP\"))))));\n};\n\nsignIn.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default signIn;","map":{"version":3,"sources":["C:/Users/mbmih/OneDrive/Desktop/Work/App Final/Tip-Top-NX/frontend/Frontend/src/SignIn/SignIn.js"],"names":["React","useState","useEffect","styles","PropTypes","Splash","useSelector","useDispatch","signin","signinFailed","signIn","navigation","email","setEmail","password","setPassword","validEmail","checkEmail","validPassword","checkPassword","user","state","dispatch","isValid","navigate","validation","emailregex","valid","test","length","Keyboard","dismiss","container","isFetching","flex","justifyContent","alignItems","width","height","require","resizeMode","button","backgroundColor","alignSelf","buttonText","title","textStyle","inputContainer","error","inputText","text","signUpBox","signUpText","reset","index","routes","name","propTypes","shape","func","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  Keyboard,\r\n  ImageBackground,\r\n  Modal,\r\n  ActivityIndicator,\r\n  Image,\r\n} from \"react-native\";\r\nimport styles from \"./SignInStyles\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Splash from \"../Splash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { signin, signinFailed } from \"../../../redux/ActionCreators\";\r\n\r\nconst signIn = ({ navigation }) => {\r\n  // states for handling the input\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  // states for style change if not valid\r\n  const [validEmail, checkEmail] = useState(true);\r\n  const [validPassword, checkPassword] = useState(true);\r\n\r\n  // redux\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    user.isValid = false;\r\n    dispatch(signinFailed());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user.isValid) {\r\n      navigation.navigate(\"Home\");\r\n    }\r\n  }, [user.isValid]);\r\n\r\n  const validation = () => {\r\n    // console.log(\"start\",validEmail,validPassword);\r\n    const emailregex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\r\n    let valid = true;\r\n    // email check\r\n    if (email == \"\") {\r\n      checkEmail(false);\r\n      valid = false;\r\n    } else if (!emailregex.test(email)) {\r\n      checkEmail(false);\r\n      valid = false;\r\n    } else {\r\n      checkEmail(true);\r\n    }\r\n    // password check\r\n    if (password == \"\" || password.length < 6) {\r\n      checkPassword(false);\r\n      valid = false;\r\n      setPassword(\"\");\r\n    } else {\r\n      checkPassword(true);\r\n    }\r\n    if (valid) {\r\n      dispatch(\r\n        signin({\r\n          email,\r\n          password,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\r\n      <View style={styles.container}>\r\n        {/* <Splash visible={user.isFetching} /> */}\r\n        {user.isFetching ? (\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <Image\r\n              source={require(\"../../../assets/q.gif\")}\r\n              style={{ height: 100, width: 100 }}\r\n            />\r\n          </View>\r\n        ) : (\r\n          <ImageBackground\r\n            source={require(\"../../../assets/b1.jpg\")}\r\n            style={{\r\n              flex: 1,\r\n              resizeMode: \"cover\",\r\n              justifyContent: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n            blurRadius={0}\r\n          >\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.button,\r\n                {\r\n                  width: 100,\r\n                  backgroundColor: \"rgba(0, 0, 0, 0.75)\",\r\n                  alignSelf: \"flex-end\",\r\n                },\r\n              ]}\r\n              onPress={() => navigation.navigate(\"Home\")}\r\n            >\r\n              <Text style={styles.buttonText}>SKIP</Text>\r\n            </TouchableOpacity>\r\n            <View style={styles.title}>\r\n              <Text style={styles.textStyle}>SIGN IN</Text>\r\n              <Text style={styles.textStyle}>TO CONTINUE</Text>\r\n            </View>\r\n            <View\r\n              style={[styles.inputContainer, !validEmail ? styles.error : null]}\r\n            >\r\n              <TextInput\r\n                style={styles.inputText}\r\n                placeholder=\"EMAIL ADDRESS\"\r\n                placeholderTextColor=\"#666\"\r\n                onChangeText={(text) => setEmail(text)}\r\n                value={email}\r\n              ></TextInput>\r\n            </View>\r\n            <View\r\n              style={[\r\n                styles.inputContainer,\r\n                !validPassword ? styles.error : null,\r\n              ]}\r\n            >\r\n              <TextInput\r\n                style={styles.inputText}\r\n                placeholder=\"PASSWORD\"\r\n                placeholderTextColor=\"#666\"\r\n                secureTextEntry={true}\r\n                onChangeText={(text) => setPassword(text)}\r\n                value={password}\r\n              ></TextInput>\r\n            </View>\r\n            <TouchableOpacity\r\n              style={styles.button}\r\n              onPress={() => validation()}\r\n            >\r\n              <Text style={styles.buttonText}>BEGIN</Text>\r\n            </TouchableOpacity>\r\n            <View style={styles.signUpBox}>\r\n              <Text style={styles.signUpText}>NOT A MEMBER YET ?</Text>\r\n              <TouchableOpacity\r\n                style={styles.button}\r\n                onPress={() =>\r\n                  navigation.reset({\r\n                    index: 0,\r\n                    routes: [{ name: \"Sign Up\" }],\r\n                  })\r\n                }\r\n              >\r\n                <Text style={styles.buttonText}>SIGN UP</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </ImageBackground>\r\n        )}\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n};\r\n\r\nsignIn.propTypes = {\r\n  navigation: PropTypes.shape({\r\n    navigate: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default signIn;\r\n"]},"metadata":{},"sourceType":"module"}