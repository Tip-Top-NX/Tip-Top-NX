{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mbmih\\\\OneDrive\\\\Desktop\\\\Work\\\\App Final\\\\Tip-Top-NX\\\\frontend\\\\Frontend\\\\src\\\\Profile\\\\EditProfile\\\\EditProfile.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styles from \"./EditProfileStyles\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport UserPermissions from \"../../../Utilities/UserPermissions\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { postImage, putProfile } from \"../../../../redux/ActionCreators\";\nimport { getURL } from \"../../../../axios\";\nimport SwitchSelector from \"react-native-switch-selector\";\n\nvar EditProfile = function EditProfile(_ref) {\n  var navigation = _ref.navigation;\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var dispatch = useDispatch();\n  var email = user.email;\n\n  var _useState = useState(user.name),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(user.contact.toString()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      phone = _useState4[0],\n      setPhone = _useState4[1];\n\n  var _useState5 = useState(user.address),\n      _useState6 = _slicedToArray(_useState5, 2),\n      address = _useState6[0],\n      setAddress = _useState6[1];\n\n  var _useState7 = useState(getURL(user.image)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      picture = _useState8[0],\n      setPicture = _useState8[1];\n\n  var _useState9 = useState(user.age),\n      _useState10 = _slicedToArray(_useState9, 2),\n      age = _useState10[0],\n      setAge = _useState10[1];\n\n  var _useState11 = useState(user.gender),\n      _useState12 = _slicedToArray(_useState11, 2),\n      gender = _useState12[0],\n      setGender = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      validName = _useState14[0],\n      checkName = _useState14[1];\n\n  var _useState15 = useState(true),\n      _useState16 = _slicedToArray(_useState15, 2),\n      validPhone = _useState16[0],\n      checkPhone = _useState16[1];\n\n  var _useState17 = useState(true),\n      _useState18 = _slicedToArray(_useState17, 2),\n      validAge = _useState18[0],\n      checkAge = _useState18[1];\n\n  var handlePress = function handlePress() {\n    var result, data;\n    return _regeneratorRuntime.async(function handlePress$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            UserPermissions.getCameraPermission();\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              aspect: [4, 3]\n            }));\n\n          case 3:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              data = new FormData();\n              data.append(\"myImage\", {\n                uri: result.uri,\n                type: \"image/jpeg\",\n                name: \"profile.jpg\"\n              });\n              dispatch(postImage(data));\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    if (user.image != \"\") {\n      setPicture(getURL(user.image));\n    }\n  }, [user.image]);\n\n  var validation = function validation() {\n    var alph = /^[a-zA-Z]{2,40}( [a-zA-Z]{2,40})+$/;\n\n    if (name === \"\") {\n      checkName(false);\n    } else if (!alph.test(name)) {\n      checkName(false);\n    } else {\n      checkName(true);\n    }\n\n    if (phone === \"\" || phone.length !== 10 || phone.charAt(0) < 7) {\n      checkPhone(false);\n    } else {\n      checkPhone(true);\n    }\n\n    if (age === \"\" || age.length >= 3) {\n      checkAge(false);\n    } else {\n      checkAge(true);\n    }\n\n    if (validName && validPhone) {\n      dispatch(putProfile({\n        name: name,\n        contact: phone,\n        address: address\n      }));\n      navigation.goBack();\n    }\n  };\n\n  return React.createElement(ImageBackground, {\n    source: require(\"../../../../assets/b.jpg\"),\n    style: {\n      flex: 1,\n      resizeMode: \"cover\",\n      justifyContent: \"center\"\n    },\n    blurRadius: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.avatarPlaceholder,\n    onPress: function onPress() {\n      return handlePress();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: picture\n    },\n    style: styles.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"FULL NAME\"), React.createElement(TextInput, {\n    style: [styles.inputText, !validName ? styles.error : null],\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    value: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.emailContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"EMAIL ADDRESS\"), React.createElement(TextInput, {\n    style: styles.emailText,\n    value: email,\n    editable: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.ageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }, \"AGE\"), React.createElement(TextInput, {\n    style: [styles.inputText, !validAge ? styles.error : null],\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(text) {\n      return setAge(text);\n    },\n    maxLength: 3,\n    value: age,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.genderContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, \"GENDER\"), React.createElement(SwitchSelector, {\n    initial: 0,\n    onPress: function onPress(value) {\n      return setGender(value);\n    },\n    borderRadius: 0,\n    height: 50,\n    fontSize: 16,\n    textColor: \"#777\",\n    selectedColor: \"white\",\n    buttonColor: \"black\",\n    borderColor: \"black\",\n    backgroundColor: \"rgba(112,128,144, 0.0)\",\n    hasPadding: true,\n    options: [{\n      label: \"Male\",\n      value: \"Male\"\n    }, {\n      label: \"Female\",\n      value: \"Female\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: styles.addressContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, \"DELIVERY ADDRESS\"), React.createElement(TextInput, {\n    style: styles.addressText,\n    onChangeText: function onChangeText(text) {\n      return setAddress(text);\n    },\n    value: address,\n    multiline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.heading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, \"CONTACT\"), React.createElement(TextInput, {\n    style: [styles.inputText, !validPhone ? styles.error : null],\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(text) {\n      return setPhone(text);\n    },\n    maxLength: 10,\n    value: phone,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: {\n      width: 200,\n      height: 50,\n      justifyContent: \"center\",\n      marginTop: 15,\n      marginBottom: 30,\n      backgroundColor: \"rgba(112,128,144, 0.7)\",\n      borderColor: \"#2F4F4F\",\n      borderWidth: 3\n    },\n    onPress: function onPress() {\n      return validation();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      color: \"#fff\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, \"SAVE CHANGES\"))))));\n};\n\nexport default EditProfile;","map":{"version":3,"sources":["C:/Users/mbmih/OneDrive/Desktop/Work/App Final/Tip-Top-NX/frontend/Frontend/src/Profile/EditProfile/EditProfile.js"],"names":["React","useState","useEffect","useSelector","useDispatch","styles","TouchableOpacity","UserPermissions","ImagePicker","KeyboardAwareScrollView","postImage","putProfile","getURL","SwitchSelector","EditProfile","navigation","user","state","dispatch","email","name","setName","contact","toString","phone","setPhone","address","setAddress","image","picture","setPicture","age","setAge","gender","setGender","validName","checkName","validPhone","checkPhone","validAge","checkAge","handlePress","getCameraPermission","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","result","cancelled","data","FormData","append","uri","type","validation","alph","test","length","charAt","goBack","require","flex","resizeMode","justifyContent","Keyboard","dismiss","container","avatarPlaceholder","avatar","inputContainer","heading","inputText","error","text","emailContainer","emailText","flexDirection","ageContainer","genderContainer","value","label","addressContainer","addressText","width","height","marginTop","marginBottom","backgroundColor","borderColor","borderWidth","textAlign","color"],"mappings":"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","sourcesContent":["/* eslint-disable */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Image,\r\n  TouchableWithoutFeedback,\r\n  TextInput,\r\n  Keyboard,\r\n  ImageBackground,\r\n} from \"react-native\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styles from \"./EditProfileStyles\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport UserPermissions from \"../../../Utilities/UserPermissions\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\nimport { postImage, putProfile } from \"../../../../redux/ActionCreators\";\r\nimport { getURL } from \"../../../../axios\";\r\nimport SwitchSelector from \"react-native-switch-selector\";\r\n\r\nconst EditProfile = ({ navigation }) => {\r\n  // redux\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const email = user.email;\r\n\r\n  // states for handling the input\r\n  const [name, setName] = useState(user.name);\r\n  const [phone, setPhone] = useState(user.contact.toString());\r\n  const [address, setAddress] = useState(user.address);\r\n  const [picture, setPicture] = useState(getURL(user.image));\r\n  const [age, setAge] = useState(user.age);\r\n  const [gender, setGender] = useState(user.gender);\r\n\r\n  // states for style change if not valid\r\n  const [validName, checkName] = useState(true);\r\n  const [validPhone, checkPhone] = useState(true);\r\n  const [validAge, checkAge] = useState(true);\r\n\r\n  const handlePress = async () => {\r\n    UserPermissions.getCameraPermission();\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n    });\r\n    if (!result.cancelled) {\r\n      const data = new FormData();\r\n      data.append(\"myImage\", {\r\n        uri: result.uri,\r\n        type: \"image/jpeg\",\r\n        name: \"profile.jpg\",\r\n      });\r\n      // console.log(user);\r\n      dispatch(postImage(data));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user.image != \"\") {\r\n      setPicture(getURL(user.image));\r\n    }\r\n  }, [user.image]);\r\n\r\n  const validation = () => {\r\n    const alph = /^[a-zA-Z]{2,40}( [a-zA-Z]{2,40})+$/;\r\n\r\n    // name check\r\n    if (name === \"\") {\r\n      checkName(false);\r\n    } else if (!alph.test(name)) {\r\n      checkName(false);\r\n    } else {\r\n      checkName(true);\r\n    }\r\n    // phone number check\r\n    if (phone === \"\" || phone.length !== 10 || phone.charAt(0) < 7) {\r\n      checkPhone(false);\r\n    } else {\r\n      checkPhone(true);\r\n    }\r\n    // age check\r\n    if (age === \"\" || age.length >= 3) {\r\n      checkAge(false);\r\n    } else {\r\n      checkAge(true);\r\n    }\r\n\r\n    if (validName && validPhone) {\r\n      dispatch(\r\n        putProfile({\r\n          name,\r\n          contact: phone,\r\n          address,\r\n        })\r\n      );\r\n      navigation.goBack();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={require(\"../../../../assets/b.jpg\")}\r\n      style={{ flex: 1, resizeMode: \"cover\", justifyContent: \"center\" }}\r\n      blurRadius={0}\r\n    >\r\n      <KeyboardAwareScrollView>\r\n        <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\r\n          <View style={styles.container}>\r\n            <TouchableOpacity\r\n              style={styles.avatarPlaceholder}\r\n              onPress={() => handlePress()}\r\n            >\r\n              <Image source={{ uri: picture }} style={styles.avatar} />\r\n            </TouchableOpacity>\r\n            <View style={styles.inputContainer}>\r\n              <Text style={styles.heading}>FULL NAME</Text>\r\n              <TextInput\r\n                style={[styles.inputText, !validName ? styles.error : null]}\r\n                onChangeText={(text) => setName(text)}\r\n                value={name}\r\n              ></TextInput>\r\n            </View>\r\n            <View style={styles.emailContainer}>\r\n              <Text style={styles.heading}>EMAIL ADDRESS</Text>\r\n              <TextInput\r\n                style={styles.emailText}\r\n                value={email}\r\n                editable={false}\r\n              ></TextInput>\r\n            </View>\r\n            <View style={{ flexDirection: \"row\" }}>\r\n              <View style={styles.ageContainer}>\r\n                <Text style={styles.heading}>AGE</Text>\r\n                <TextInput\r\n                  style={[styles.inputText, !validAge ? styles.error : null]}\r\n                  keyboardType={\"numeric\"}\r\n                  onChangeText={(text) => setAge(text)}\r\n                  maxLength={3}\r\n                  value={age}\r\n                ></TextInput>\r\n              </View>\r\n\r\n              <View style={styles.genderContainer}>\r\n                <Text style={styles.heading}>GENDER</Text>\r\n                <SwitchSelector\r\n                  initial={0}\r\n                  onPress={(value) => setGender(value)}\r\n                  borderRadius={0}\r\n                  height={50}\r\n                  fontSize={16}\r\n                  textColor={\"#777\"} //'#7a44cf'\r\n                  selectedColor={\"white\"}\r\n                  buttonColor={\"black\"}\r\n                  borderColor={\"black\"}\r\n                  backgroundColor={\"rgba(112,128,144, 0.0)\"}\r\n                  hasPadding\r\n                  options={[\r\n                    { label: \"Male\", value: \"Male\" },\r\n                    { label: \"Female\", value: \"Female\" },\r\n                  ]}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n            <View style={styles.addressContainer}>\r\n              <Text style={styles.heading}>DELIVERY ADDRESS</Text>\r\n              <TextInput\r\n                style={styles.addressText}\r\n                onChangeText={(text) => setAddress(text)}\r\n                value={address}\r\n                multiline={true}\r\n              ></TextInput>\r\n            </View>\r\n            <View style={styles.inputContainer}>\r\n              <Text style={styles.heading}>CONTACT</Text>\r\n              <TextInput\r\n                style={[styles.inputText, !validPhone ? styles.error : null]}\r\n                keyboardType={\"numeric\"}\r\n                onChangeText={(text) => setPhone(text)}\r\n                maxLength={10}\r\n                value={phone}\r\n              ></TextInput>\r\n            </View>\r\n            <TouchableOpacity\r\n              style={{\r\n                width: 200,\r\n                height: 50,\r\n                // backgroundColor: \"#813743\",\r\n                justifyContent: \"center\",\r\n                marginTop: 15,\r\n                marginBottom: 30,\r\n                backgroundColor: \"rgba(112,128,144, 0.7)\",\r\n                borderColor: \"#2F4F4F\",\r\n                borderWidth: 3,\r\n              }}\r\n              onPress={() => validation()}\r\n            >\r\n              <Text style={{ textAlign: \"center\", color: \"#fff\" }}>\r\n                SAVE CHANGES\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n      </KeyboardAwareScrollView>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n"]},"metadata":{},"sourceType":"module"}