{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\app\\\\Tip-Top-NX\\\\frontend\\\\Frontend\\\\src\\\\Profile\\\\Picture.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport UserPermissions from \"../../Utilities/UserPermissions\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nvar Picture = function Picture() {\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  useEffect(function () {\n    console.log(\"user\", user);\n  }, []);\n  var navigation = useNavigation();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      picture = _useState2[0],\n      setPicture = _useState2[1];\n\n  var handlePress = function handlePress() {\n    var permissionResult, pickerResult;\n    return _regeneratorRuntime.async(function handlePress$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraRollPermissionsAsync());\n\n          case 2:\n            permissionResult = _context.sent;\n\n            if (!(permissionResult.granted === false)) {\n              _context.next = 6;\n              break;\n            }\n\n            alert(\"Permission to access camera roll is required!\");\n            return _context.abrupt(\"return\");\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync());\n\n          case 8:\n            pickerResult = _context.sent;\n            setPicture(pickerResult.uri);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"chevron-left-circle\",\n    size: 30,\n    color: \"#F8A9A9\",\n    style: {\n      position: \"absolute\",\n      top: 30,\n      left: 20\n    },\n    onPress: function onPress() {\n      navigation.openDrawer();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.avatarPlaceholder,\n    onPress: function onPress() {\n      return handlePress();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: picture\n    },\n    style: styles.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: styles.textContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, user.name.toUpperCase())));\n};\n\nvar styles = StyleSheet.create({\n  avatar: {\n    position: \"absolute\",\n    width: 150,\n    height: 150,\n    borderRadius: 75,\n    backgroundColor: \"#E1E2E6\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  avatarPlaceholder: {\n    marginVertical: 10,\n    marginTop: 30,\n    width: 160,\n    height: 160,\n    backgroundColor: \"#E1E2E6\",\n    borderRadius: 80,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    borderWidth: 1,\n    borderColor: \"#DDA0DD\",\n    borderStyle: \"dotted\"\n  },\n  container: {},\n  textStyle: {\n    textAlign: \"center\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#FFE5E5\"\n  },\n  textContainer: {\n    height: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(52, 52, 52, 0.7)\"\n  },\n  header: {}\n});\nexport default Picture;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/app/Tip-Top-NX/frontend/Frontend/src/Profile/Picture.js"],"names":["React","useState","useEffect","useDispatch","useSelector","UserPermissions","ImagePicker","MaterialCommunityIcons","useNavigation","Picture","user","state","console","log","navigation","picture","setPicture","handlePress","requestCameraRollPermissionsAsync","permissionResult","granted","alert","launchImageLibraryAsync","pickerResult","uri","styles","container","header","position","top","left","openDrawer","avatarPlaceholder","avatar","textContainer","textStyle","name","toUpperCase","StyleSheet","create","width","height","borderRadius","backgroundColor","justifyContent","alignItems","marginVertical","marginTop","alignSelf","borderWidth","borderColor","borderStyle","textAlign","fontSize","fontWeight","color"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { StyleSheet, TouchableOpacity, Image, View, Text } from \"react-native\";\nimport UserPermissions from \"../../Utilities/UserPermissions\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst Picture = () => {\n\n  // redux\n  const user = useSelector(state => state.user);\n\n  useEffect(() => {\n    console.log(\"user\",user);\n  }, [])\n\n  const navigation = useNavigation();\n  const [picture, setPicture] = useState();\n  const handlePress = async () => {\n    // UserPermissions.getCameraPermission();\n    // let result = await ImagePicker.launchImageLibraryAsync({\n    //   mediaTypes: ImagePicker.MediaTypeOptions.Images,\n    //   allowsEditing: true,\n    //   aspect: [4, 3],\n    // });\n    // if (!result.cancelled) {\n    //   setPicture(result.uri);\n    //   console.log(\"result\",result.uri);\n    // }\n      let permissionResult = await ImagePicker.requestCameraRollPermissionsAsync();\n  \n      if (permissionResult.granted === false) {\n        alert(\"Permission to access camera roll is required!\");\n        return;\n      }\n  \n      let pickerResult = await ImagePicker.launchImageLibraryAsync();\n      setPicture(pickerResult.uri);\n  };\n\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <MaterialCommunityIcons\n          name=\"chevron-left-circle\"\n          size={30}\n          color=\"#F8A9A9\"\n          style={{ position: \"absolute\", top: 30, left: 20 }}\n          onPress={() => {\n            navigation.openDrawer();\n          }}\n        />\n        <TouchableOpacity\n          style={styles.avatarPlaceholder}\n          onPress={() => handlePress()}\n        >\n          <Image source={{ uri: picture }} style={styles.avatar} />\n        </TouchableOpacity>\n      </View>\n      <View style={styles.textContainer}>\n        <Text style={styles.textStyle}>{user.name.toUpperCase()}</Text>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  avatar: {\n    position: \"absolute\",\n    width: 150,\n    height: 150,\n    borderRadius: 75,\n    backgroundColor: \"#E1E2E6\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  avatarPlaceholder: {\n    marginVertical: 10,\n    marginTop: 30,\n    width: 160,\n    height: 160,\n    backgroundColor: \"#E1E2E6\",\n    borderRadius: 80,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    borderWidth: 1,\n    borderColor: \"#DDA0DD\",\n    borderStyle: \"dotted\",\n  },\n  container: {\n    // borderWidth: 1,\n  },\n  textStyle: {\n    textAlign: \"center\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#FFE5E5\",\n  },\n  textContainer: {\n    height: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(52, 52, 52, 0.7)\",\n  },\n  header: {},\n});\n\nexport default Picture;\n"]},"metadata":{},"sourceType":"module"}