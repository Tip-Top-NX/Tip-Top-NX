{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as ActionTypes from \"../ActionTypes\";\nexport var addresses = function addresses() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    addresses: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.ADD_ADDRESS:\n      var address = action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addresses: state.addresses.concat(address)\n      });\n\n    default:\n      return state;\n  }\n};\nexport default addresses;","map":{"version":3,"sources":["C:/Users/mbmih/OneDrive/Desktop/Work/App Final/Tip-Top-NX/frontend/redux/reducers/addresses.js"],"names":["ActionTypes","addresses","state","action","type","ADD_ADDRESS","address","payload","concat"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAEL;AAAA,MAFOC,KAEP,uEAFe;AAC3BD,IAAAA,SAAS,EAAC;AADiB,GAEf;AAAA,MAAZE,MAAY;;AAEZ,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKJ,WAAW,CAACK,WAAjB;AACI,UAAIC,OAAO,GAAGH,MAAM,CAACI,OAArB;AACA,6CAAWL,KAAX;AAAkBD,QAAAA,SAAS,EAAEC,KAAK,CAACD,SAAN,CAAgBO,MAAhB,CAAuBF,OAAvB;AAA7B;;AAEJ;AACI,aAAOJ,KAAP;AAPR;AASH,CAbE;AAgBP,eAAeD,SAAf","sourcesContent":["import * as ActionTypes from \"../ActionTypes\";\r\n\r\nexport const addresses = ( state = {\r\n        addresses:[]\r\n    } , action ) => {\r\n\r\n        switch(action.type){\r\n\r\n            case ActionTypes.ADD_ADDRESS:\r\n                var address = action.payload;\r\n                return {...state, addresses :state.addresses.concat(address)};\r\n\r\n            default:\r\n                return state;  \r\n        }\r\n    };\r\n\r\n\r\nexport default addresses;"]},"metadata":{},"sourceType":"module"}