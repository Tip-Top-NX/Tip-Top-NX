{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mbmih\\\\OneDrive\\\\Desktop\\\\Work\\\\App Final\\\\Tip-Top-NX\\\\frontend\\\\Frontend\\\\src\\\\Cart\\\\PlaceOrder.js\";\nimport React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { myAxios } from \"../../../axios\";\nimport { useDispatch } from \"react-redux\";\nimport { placeOrder } from \"../../../redux/ActionCreators\";\n\nvar PlaceOrderTab = function PlaceOrderTab(props) {\n  var navigation = useNavigation();\n  var dispatch = useDispatch();\n\n  var handleRightButton = function handleRightButton() {\n    if (props.rightButton === \"NEXT\") {\n      navigation.navigate(\"CartPage2\");\n    } else {\n      if (props.addressVal && props.paymentVal) {\n        dispatch(placeOrder(\"COD\"));\n        navigation.navigate(\"OrderConfirm\");\n      } else {\n        alert(\"Cannot leave address or payment empty\");\n      }\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.placeOrderTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: [styles.buttonBox, {\n      backgroundColor: \"#fff\",\n      borderWidth: 1\n    }],\n    onPress: function onPress() {\n      props.leftButton === \"BACK\" ? navigation.goBack() : navigation.navigate(\"Home\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: [styles.buttonText, {\n      color: \"#000\"\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, props.leftButton)), React.createElement(TouchableOpacity, {\n    style: styles.buttonBox,\n    onPress: function onPress() {\n      return handleRightButton();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, props.rightButton)));\n};\n\nexport default PlaceOrderTab;\nvar styles = StyleSheet.create({\n  placeOrderTab: {\n    width: \"100%\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    paddingVertical: 5,\n    backgroundColor: \"#fff\",\n    borderWidth: 1,\n    borderColor: \"#ccc\"\n  },\n  buttonBox: {\n    width: 170,\n    height: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#C2185B\"\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/mbmih/OneDrive/Desktop/Work/App Final/Tip-Top-NX/frontend/Frontend/src/Cart/PlaceOrder.js"],"names":["React","useNavigation","myAxios","useDispatch","placeOrder","PlaceOrderTab","props","navigation","dispatch","handleRightButton","rightButton","navigate","addressVal","paymentVal","alert","styles","placeOrderTab","buttonBox","backgroundColor","borderWidth","leftButton","goBack","buttonText","color","StyleSheet","create","width","justifyContent","alignItems","flexDirection","paddingVertical","borderColor","height","fontWeight"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,OAAT;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,UAAT;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,MAAMC,UAAU,GAAGN,aAAa,EAAhC;AACA,MAAMO,QAAQ,GAAGL,WAAW,EAA5B;;AACA,MAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,QAAIH,KAAK,CAACI,WAAN,KAAsB,MAA1B,EAAkC;AAChCH,MAAAA,UAAU,CAACI,QAAX,CAAoB,WAApB;AACD,KAFD,MAEO;AACL,UAAIL,KAAK,CAACM,UAAN,IAAoBN,KAAK,CAACO,UAA9B,EAA0C;AACxCL,QAAAA,QAAQ,CAACJ,UAAU,CAAC,KAAD,CAAX,CAAR;AACAG,QAAAA,UAAU,CAACI,QAAX,CAAoB,cAApB;AACD,OAHD,MAGO;AACLG,QAAAA,KAAK,CAAC,uCAAD,CAAL;AACD;AACF;AACF,GAXD;;AAYA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE,CAACD,MAAM,CAACE,SAAR,EAAmB;AAAEC,MAAAA,eAAe,EAAE,MAAnB;AAA2BC,MAAAA,WAAW,EAAE;AAAxC,KAAnB,CADT;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbb,MAAAA,KAAK,CAACc,UAAN,KAAqB,MAArB,GACIb,UAAU,CAACc,MAAX,EADJ,GAEId,UAAU,CAACI,QAAX,CAAoB,MAApB,CAFJ;AAGD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACI,MAAM,CAACO,UAAR,EAAoB;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAApB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,KAAK,CAACc,UADT,CARF,CADF,EAaE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEL,MAAM,CAACE,SADhB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMR,iBAAiB,EAAvB;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACO,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiChB,KAAK,CAACI,WAAvC,CAJF,CAbF,CADF;AAsBD,CArCD;;AAuCA,eAAeL,aAAf;AAEA,IAAMU,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,aAAa,EAAE;AACbU,IAAAA,KAAK,EAAE,MADM;AAEbC,IAAAA,cAAc,EAAE,cAFH;AAGbC,IAAAA,UAAU,EAAE,QAHC;AAIbC,IAAAA,aAAa,EAAE,KAJF;AAKbC,IAAAA,eAAe,EAAE,CALJ;AAMbZ,IAAAA,eAAe,EAAE,MANJ;AAObC,IAAAA,WAAW,EAAE,CAPA;AAQbY,IAAAA,WAAW,EAAE;AARA,GADgB;AAW/Bd,EAAAA,SAAS,EAAE;AACTS,IAAAA,KAAK,EAAE,GADE;AAETM,IAAAA,MAAM,EAAE,EAFC;AAITL,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,UAAU,EAAE,QALH;AAMTV,IAAAA,eAAe,EAAE;AANR,GAXoB;AAmB/BI,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE,MADG;AAEVU,IAAAA,UAAU,EAAE;AAFF;AAnBmB,CAAlB,CAAf","sourcesContent":["/* eslint-disable */\r\nimport React from \"react\";\r\nimport { TouchableOpacity, StyleSheet, View, Text } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { myAxios } from \"../../../axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { placeOrder } from \"../../../redux/ActionCreators\";\r\n\r\nconst PlaceOrderTab = (props) => {\r\n  const navigation = useNavigation();\r\n  const dispatch = useDispatch();\r\n  const handleRightButton = () => {\r\n    if (props.rightButton === \"NEXT\") {\r\n      navigation.navigate(\"CartPage2\");\r\n    } else {\r\n      if (props.addressVal && props.paymentVal) {\r\n        dispatch(placeOrder(\"COD\"));\r\n        navigation.navigate(\"OrderConfirm\");\r\n      } else {\r\n        alert(\"Cannot leave address or payment empty\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <View style={styles.placeOrderTab}>\r\n      <TouchableOpacity\r\n        style={[styles.buttonBox, { backgroundColor: \"#fff\", borderWidth: 1 }]}\r\n        onPress={() => {\r\n          props.leftButton === \"BACK\"\r\n            ? navigation.goBack()\r\n            : navigation.navigate(\"Home\");\r\n        }}\r\n      >\r\n        <Text style={[styles.buttonText, { color: \"#000\" }]}>\r\n          {props.leftButton}\r\n        </Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity\r\n        style={styles.buttonBox}\r\n        onPress={() => handleRightButton()}\r\n      >\r\n        <Text style={styles.buttonText}>{props.rightButton}</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderTab;\r\n\r\nconst styles = StyleSheet.create({\r\n  placeOrderTab: {\r\n    width: \"100%\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"row\",\r\n    paddingVertical: 5,\r\n    backgroundColor: \"#fff\",\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n  },\r\n  buttonBox: {\r\n    width: 170,\r\n    height: 50,\r\n    // borderWidth: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#C2185B\",\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}