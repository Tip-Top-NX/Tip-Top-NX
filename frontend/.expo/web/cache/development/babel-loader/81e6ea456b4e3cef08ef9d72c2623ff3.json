{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\app\\\\Tip-Top-NX\\\\frontend\\\\Frontend\\\\src\\\\Catgories\\\\Home\\\\BackgroundCarousel.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nvar DEVICE_WIDTH = Dimensions.get(\"window\").width;\nvar AUTO_SWIPE_INTERVAL = 3000;\nvar height = DEVICE_WIDTH * 0.6;\n\nvar BackgroundCarousel = function (_React$Component) {\n  _inherits(BackgroundCarousel, _React$Component);\n\n  var _super = _createSuper(BackgroundCarousel);\n\n  function BackgroundCarousel(props) {\n    var _this;\n\n    _classCallCheck(this, BackgroundCarousel);\n\n    _this = _super.call(this, props);\n    _this.scrollRef = React.createRef();\n\n    _this.componentDidMount = function () {\n      setInterval(function () {\n        _this.setState(function (prev) {\n          return {\n            selectedIndex: prev.selectedIndex === _this.props.images.length - 1 ? 0 : prev.selectedIndex + 1\n          };\n        }, function () {\n          _this.scrollRef.current.scrollTo({\n            animated: true,\n            x: DEVICE_WIDTH * _this.state.selectedIndex,\n            y: 0\n          });\n        });\n      }, AUTO_SWIPE_INTERVAL);\n    };\n\n    _this.nextImage = function () {\n      return _this.setState(function (prev) {\n        return {\n          selectedIndex: prev.selectedIndex === _this.props.images.length - 1 ? 0 : prev.selectedIndex + 1\n        };\n      });\n    };\n\n    _this.setSelectedIndex = function (event) {\n      var contentOffset = event.nativeEvent.contentOffset;\n      var viewSize = event.nativeEvent.layoutMeasurement;\n      var selectedIndex = Math.floor(contentOffset.x / viewSize.width);\n\n      _this.setState({\n        selectedIndex: selectedIndex\n      });\n    };\n\n    _this.state = {\n      selectedIndex: 0\n    };\n    _this.scrollRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(BackgroundCarousel, [{\n    key: \"render\",\n    value: function render() {\n      var images = this.props.images;\n      var selectedIndex = this.state.selectedIndex;\n      return React.createElement(View, {\n        style: {\n          height: height,\n          width: \"100%\",\n          marginTop: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        horizontal: true,\n        pagingEnabled: true,\n        onMomentumScrollEnd: this.setSelectedIndex,\n        ref: this.scrollRef,\n        showsHorizontalScrollIndicator: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, images.map(function (image) {\n        return React.createElement(Image, {\n          style: styles.backgroundImage,\n          source: {\n            uri: image\n          },\n          key: image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }\n        });\n      })), React.createElement(View, {\n        style: styles.circleDiv,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, images.map(function (image, i) {\n        return React.createElement(View, {\n          style: [styles.whiteCircle, {\n            opacity: i === selectedIndex ? 1 : 0.5\n          }],\n          key: image,\n          active: i === selectedIndex,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }\n        });\n      })));\n    }\n  }]);\n\n  return BackgroundCarousel;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  backgroundImage: {\n    height: \"100%\",\n    width: Dimensions.get(\"window\").width\n  },\n  circleDiv: {\n    position: \"absolute\",\n    bottom: 15,\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    height: 10\n  },\n  whiteCircle: {\n    width: 6,\n    height: 6,\n    borderRadius: 3,\n    margin: 5,\n    backgroundColor: \"#fff\"\n  }\n});\nexport { BackgroundCarousel };","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/app/Tip-Top-NX/frontend/Frontend/src/Catgories/Home/BackgroundCarousel.js"],"names":["React","DEVICE_WIDTH","Dimensions","get","width","AUTO_SWIPE_INTERVAL","height","BackgroundCarousel","props","scrollRef","createRef","componentDidMount","setInterval","setState","prev","selectedIndex","images","length","current","scrollTo","animated","x","state","y","nextImage","setSelectedIndex","event","contentOffset","nativeEvent","viewSize","layoutMeasurement","Math","floor","marginTop","map","image","styles","backgroundImage","uri","circleDiv","i","whiteCircle","opacity","Component","StyleSheet","create","position","bottom","display","flexDirection","alignItems","justifyContent","borderRadius","margin","backgroundColor"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport * as React from \"react\";\nimport { StyleSheet, View, ScrollView, Dimensions, Image } from \"react-native\";\n\nconst DEVICE_WIDTH = Dimensions.get(\"window\").width;\nconst AUTO_SWIPE_INTERVAL = 3000;\n\nconst height = DEVICE_WIDTH * 0.6; //60%\n\nclass BackgroundCarousel extends React.Component {\n  scrollRef = React.createRef();\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedIndex: 0,\n    };\n    this.scrollRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    setInterval(() => {\n      this.setState(\n        (prev) => ({\n          selectedIndex:\n            prev.selectedIndex === this.props.images.length - 1\n              ? 0\n              : prev.selectedIndex + 1,\n        }),\n        () => {\n          this.scrollRef.current.scrollTo({\n            animated: true,\n            x: DEVICE_WIDTH * this.state.selectedIndex,\n            y: 0,\n          });\n        }\n      );\n    }, AUTO_SWIPE_INTERVAL);\n  };\n\n  nextImage = () =>\n    this.setState((prev) => ({\n      selectedIndex:\n        prev.selectedIndex === this.props.images.length - 1\n          ? 0\n          : prev.selectedIndex + 1,\n    }));\n\n  setSelectedIndex = (event) => {\n    const contentOffset = event.nativeEvent.contentOffset;\n    const viewSize = event.nativeEvent.layoutMeasurement;\n\n    // Divide the horizontal offset by the width of the view to see which page is visible\n    const selectedIndex = Math.floor(contentOffset.x / viewSize.width);\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    const { images } = this.props;\n    const { selectedIndex } = this.state;\n    return (\n      <View style={{ height: height, width: \"100%\", marginTop: 10 }}>\n        <ScrollView\n          horizontal\n          pagingEnabled\n          onMomentumScrollEnd={this.setSelectedIndex}\n          ref={this.scrollRef}\n          showsHorizontalScrollIndicator={false}\n        >\n          {images.map((image) => (\n            <Image\n              style={styles.backgroundImage}\n              source={{ uri: image }}\n              key={image}\n            />\n          ))}\n        </ScrollView>\n        <View style={styles.circleDiv}>\n          {images.map((image, i) => (\n            <View\n              style={[\n                styles.whiteCircle,\n                { opacity: i === selectedIndex ? 1 : 0.5 },\n              ]}\n              key={image}\n              active={i === selectedIndex}\n            />\n          ))}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  backgroundImage: {\n    height: \"100%\",\n    width: Dimensions.get(\"window\").width,\n  },\n  circleDiv: {\n    position: \"absolute\",\n    bottom: 15,\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n    height: 10,\n  },\n  whiteCircle: {\n    width: 6,\n    height: 6,\n    borderRadius: 3,\n    margin: 5,\n    backgroundColor: \"#fff\",\n  },\n});\n\nexport { BackgroundCarousel };\n"]},"metadata":{},"sourceType":"module"}