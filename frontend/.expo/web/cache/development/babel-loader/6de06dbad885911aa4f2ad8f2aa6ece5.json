{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport * as Permissions from \"expo-permissions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\n\nvar userPermission = function userPermission() {\n  _classCallCheck(this, userPermission);\n\n  this.getCameraPermission = function _callee() {\n    var _await$Permissions$as, status, _await$PermissionsAnd, _status;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(Platform.OS === \"ios\")) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n          case 3:\n            _await$Permissions$as = _context.sent;\n            status = _await$Permissions$as.status;\n\n            if (status != \"granted\") {\n              alert(\"WE NEED PERMISSION TO USE YOUR CAMERA ROLL\");\n            }\n\n          case 6:\n            if (!(Platform.OS === \"android\")) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(PermissionsAndroid.request(PermissionsAndroid.CAMERA));\n\n          case 9:\n            _await$PermissionsAnd = _context.sent;\n            _status = _await$PermissionsAnd.status;\n\n            if (_status != \"granted\") {\n              alert(\"WE NEED PERMISSION TO USE YOUR CAMERA ROLL\");\n            }\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nexport default new userPermission();","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/app/Tip-Top-NX/frontend/Frontend/Utilities/UserPermissions.js"],"names":["Permissions","userPermission","getCameraPermission","Platform","OS","askAsync","CAMERA_ROLL","status","alert","PermissionsAndroid","request","CAMERA"],"mappings":";;AAAA,OAAO,KAAKA,WAAZ,MAA6B,kBAA7B;;;;IAGMC,c;;;OACJC,mB,GAAsB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kBAChBC,QAAQ,CAACC,EAAT,KAAgB,KADA;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAEOJ,WAAW,CAACK,QAAZ,CAAqBL,WAAW,CAACM,WAAjC,CAFP;;AAAA;AAAA;AAEVC,YAAAA,MAFU,yBAEVA,MAFU;;AAGlB,gBAAIA,MAAM,IAAI,SAAd,EAAyB;AACvBC,cAAAA,KAAK,CAAC,4CAAD,CAAL;AACD;;AALiB;AAAA,kBAOhBL,QAAQ,CAACC,EAAT,KAAgB,SAPA;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAQOK,kBAAkB,CAACC,OAAnB,CACvBD,kBAAkB,CAACE,MADI,CARP;;AAAA;AAAA;AAQVJ,YAAAA,OARU,yBAQVA,MARU;;AAWlB,gBAAIA,OAAM,IAAI,SAAd,EAAyB;AACvBC,cAAAA,KAAK,CAAC,4CAAD,CAAL;AACD;;AAbiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;AAkBxB,eAAe,IAAIP,cAAJ,EAAf","sourcesContent":["import * as Permissions from \"expo-permissions\";\nimport { Platform, PermissionsAndroid } from \"react-native\";\n\nclass userPermission {\n  getCameraPermission = async () => {\n    if (Platform.OS === \"ios\") {\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n      if (status != \"granted\") {\n        alert(\"WE NEED PERMISSION TO USE YOUR CAMERA ROLL\");\n      }\n    }\n    if (Platform.OS === \"android\") {\n      const { status } = await PermissionsAndroid.request(\n        PermissionsAndroid.CAMERA\n      );\n      if (status != \"granted\") {\n        alert(\"WE NEED PERMISSION TO USE YOUR CAMERA ROLL\");\n      }\n    }\n  };\n}\n\nexport default new userPermission();\n"]},"metadata":{},"sourceType":"module"}