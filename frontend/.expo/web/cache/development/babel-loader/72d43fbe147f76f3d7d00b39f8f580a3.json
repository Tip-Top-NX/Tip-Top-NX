{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\app\\\\Tip-Top-NX\\\\frontend\\\\Frontend\\\\src\\\\SignUp\\\\SignUp.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport styles from \"./SignUpStyles\";\nimport PropTypes from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { signup, signinFailed } from \"../../../redux/ActionCreators\";\n\nvar signUp = function signUp(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      phone = _useState8[0],\n      setPhone = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      validName = _useState10[0],\n      checkName = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      validEmail = _useState12[0],\n      checkEmail = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      validPassword = _useState14[0],\n      checkPassword = _useState14[1];\n\n  var _useState15 = useState(true),\n      _useState16 = _slicedToArray(_useState15, 2),\n      validPhone = _useState16[0],\n      checkPhone = _useState16[1];\n\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(signinFailed());\n  }, []);\n  useEffect(function () {\n    if (user.isValid) {\n      navigation.navigate(\"Home\");\n    }\n  }, [user.isValid]);\n\n  var validation = function validation() {\n    var emailregex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n    var alph = /^[a-zA-Z]{2,40}( [a-zA-Z]{2,40})+$/;\n\n    if (name == \"\") {\n      checkName(false);\n    } else if (!alph.test(name)) {\n      checkName(false);\n    } else {\n      checkName(true);\n    }\n\n    if (email == \"\") {\n      checkEmail(false);\n    } else if (!emailregex.test(email)) {\n      checkEmail(false);\n    } else {\n      checkEmail(true);\n    }\n\n    if (password == \"\" || password.length < 6) {\n      checkPassword(false);\n      setPassword(\"\");\n    } else {\n      checkPassword(true);\n    }\n\n    if (phone == \"\" || phone.length !== 10 || phone.charAt(0) < 7) {\n      checkPhone(false);\n    } else {\n      checkPhone(true);\n    }\n\n    if (validEmail && validName && validPassword && validPhone) {\n      dispatch(signup({\n        name: name,\n        email: email,\n        password: password,\n        contact: phone\n      }));\n    }\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"SIGN UP\"), React.createElement(Text, {\n    style: styles.textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"TO CONTINUE\")), React.createElement(View, {\n    style: [styles.inputContainer, !validName ? styles.error : null],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"FULL NAME\",\n    placeholderTextColor: \"#666\",\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    value: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: [styles.inputContainer, !validEmail ? styles.error : null],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"EMAIL ADDRESS\",\n    placeholderTextColor: \"#666\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: [styles.inputContainer, !validPassword ? styles.error : null],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"PASSWORD\",\n    placeholderTextColor: \"#666\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: [styles.inputContainer, !validPhone ? styles.error : null],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"PHONE NUMBER\",\n    placeholderTextColor: \"#666\",\n    keyboardType: \"numeric\",\n    onChangeText: function onChangeText(text) {\n      return setPhone(text);\n    },\n    value: phone,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return validation();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"JOIN US\")), React.createElement(View, {\n    style: styles.signInBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.signInText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"ALREADY A MEMBER ?\"), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate(\"Sign In\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"SIGN IN\")))));\n};\n\nsignUp.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default signUp;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/app/Tip-Top-NX/frontend/Frontend/src/SignUp/SignUp.js"],"names":["React","useState","useEffect","styles","PropTypes","useSelector","useDispatch","signup","signinFailed","signUp","navigation","name","setName","email","setEmail","password","setPassword","phone","setPhone","validName","checkName","validEmail","checkEmail","validPassword","checkPassword","validPhone","checkPhone","user","state","dispatch","isValid","navigate","validation","emailregex","alph","test","length","charAt","contact","Keyboard","dismiss","container","title","textStyle","inputContainer","error","inputText","text","button","buttonText","signInBox","signInText","propTypes","shape","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  Keyboard,\n} from \"react-native\";\nimport styles from \"./SignUpStyles\";\nimport PropTypes from \"prop-types\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { signup, signinFailed } from '../../../redux/ActionCreators';\n\nconst signUp = ({ navigation }) => {\n  // states for handling the input\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  // states for style change if not valid\n  const [validName, checkName] = useState(true);\n  const [validEmail, checkEmail] = useState(true);\n  const [validPassword, checkPassword] = useState(true);\n  const [validPhone, checkPhone] = useState(true);\n\n  // redux\n  const user = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(signinFailed());\n  }, [])\n  \n  useEffect(() => {\n    if(user.isValid){\n      navigation.navigate(\"Home\");\n    }\n  }, [user.isValid])\n\n\n  const validation = () => {\n    const emailregex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n    const alph = /^[a-zA-Z]{2,40}( [a-zA-Z]{2,40})+$/;\n\n    // name check\n    if (name == \"\") {\n      checkName(false);\n    } else if (!alph.test(name)) {\n      checkName(false);\n      // alert(\"Please enter a valid name\");\n    } else {\n      checkName(true);\n    }\n    // email check\n    if (email == \"\") {\n      checkEmail(false);\n    } else if (!emailregex.test(email)) {\n      checkEmail(false);\n      // alert(\"Please enter a valid email address\");\n    } else {\n      checkEmail(true);\n    }\n    // password check\n    if (password == \"\" || password.length < 6) {\n      checkPassword(false);\n      // alert(\"The length of the password should be atleast 6\");\n      setPassword(\"\");\n    } else {\n      checkPassword(true);\n    }\n    // phone number check\n    if (phone == \"\" || phone.length !== 10 || phone.charAt(0) < 7) {\n      checkPhone(false);\n    } else {\n      checkPhone(true);\n    }\n\n    if(validEmail && validName && validPassword && validPhone){\n      dispatch(signup({\n        name,\n        email,\n        password,\n        contact: phone,\n      }));\n    }\n\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n      <View style={styles.container}>\n        <View style={styles.title}>\n          <Text style={styles.textStyle}>SIGN UP</Text>\n          <Text style={styles.textStyle}>TO CONTINUE</Text>\n        </View>\n        <View style={[styles.inputContainer, !validName ? styles.error : null]}>\n          <TextInput\n            style={styles.inputText}\n            placeholder=\"FULL NAME\"\n            placeholderTextColor=\"#666\"\n            onChangeText={(text) => setName(text)}\n            value={name}\n          ></TextInput>\n        </View>\n        <View\n          style={[styles.inputContainer, !validEmail ? styles.error : null]}\n        >\n          <TextInput\n            style={styles.inputText}\n            placeholder=\"EMAIL ADDRESS\"\n            placeholderTextColor=\"#666\"\n            onChangeText={(text) => setEmail(text)}\n            value={email}\n          ></TextInput>\n        </View>\n        <View\n          style={[styles.inputContainer, !validPassword ? styles.error : null]}\n        >\n          <TextInput\n            style={styles.inputText}\n            placeholder=\"PASSWORD\"\n            placeholderTextColor=\"#666\"\n            secureTextEntry={true}\n            onChangeText={(text) => setPassword(text)}\n            value={password}\n          ></TextInput>\n        </View>\n        <View\n          style={[styles.inputContainer, !validPhone ? styles.error : null]}\n        >\n          <TextInput\n            style={styles.inputText}\n            placeholder=\"PHONE NUMBER\"\n            placeholderTextColor=\"#666\"\n            keyboardType={\"numeric\"}\n            onChangeText={(text) => setPhone(text)}\n            value={phone}\n          ></TextInput>\n        </View>\n        <TouchableOpacity style={styles.button} onPress={() => validation()}>\n          <Text style={styles.buttonText}>JOIN US</Text>\n        </TouchableOpacity>\n        <View style={styles.signInBox}>\n          <Text style={styles.signInText}>ALREADY A MEMBER ?</Text>\n          <TouchableOpacity\n            style={styles.button}\n            onPress={() => navigation.navigate(\"Sign In\")}\n          >\n            <Text style={styles.buttonText}>SIGN IN</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nsignUp.propTypes = {\n  navigation: PropTypes.shape({\n    navigate: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default signUp;\n"]},"metadata":{},"sourceType":"module"}